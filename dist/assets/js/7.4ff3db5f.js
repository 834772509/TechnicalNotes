(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{209:function(t,a,v){t.exports=v.p+"assets/img/渲染引擎工作过程.0268d512.jpg"},210:function(t,a,v){t.exports=v.p+"assets/img/V8引擎.d727b940.jpg"},254:function(t,a,v){"use strict";v.r(a);var r=v(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"node-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[t._v("#")]),t._v(" Node.js")]),t._v(" "),r("h2",{attrs:{id:"基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),r("h3",{attrs:{id:"浏览器内核"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),r("ul",[r("li",[t._v("Gecko：早期被 Netscape 和 Mozilla Firefox 浏览器使用;")]),t._v(" "),r("li",[t._v("Webkit：苹果基于 KHTML 开发、开源的，用于 Safari，Google Chrome 之前也在使用;")]),t._v(" "),r("li",[t._v("Trident：微软开发，被 IE4~IE11 浏览器使用，但是 Edge 浏览器已经转向 Blink")]),t._v(" "),r("li",[t._v("Blink：是 Webkit 的一个分支，Google 开发，目前应用于 Google Chrome、Edge、Opera 等;")])]),t._v(" "),r("p",[t._v("事实上，我们经常说的浏览器内核指的是浏览器的排版引擎：")]),t._v(" "),r("ul",[r("li",[t._v("排版引擎（layout engine），也称为浏览器引擎（browser engine）、页面渲染引擎（rendering engine）或样版引擎。")])]),t._v(" "),r("h3",{attrs:{id:"渲染引擎工作过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎工作过程"}},[t._v("#")]),t._v(" 渲染引擎工作过程")]),t._v(" "),r("p",[r("img",{attrs:{src:v(209),alt:"渲染引擎工作过程"}})]),t._v(" "),r("h3",{attrs:{id:"javascript-引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-引擎"}},[t._v("#")]),t._v(" JavaScript 引擎")]),t._v(" "),r("ul",[r("li",[t._v("为什么需要 JavaScript 引擎呢？\n"),r("ul",[r("li",[t._v("事实上我们编写的 JavaScript 无论你交给浏览器或者 Node 执行，最后都是需要被 CPU 执行的；")]),t._v(" "),r("li",[t._v("但是 CPU 只认识自己的指令集，实际上是机器语言，才能被 CPU 所执行；")]),t._v(" "),r("li",[t._v("所以我们需要 JavaScript 引擎帮助我们将 JavaScript 代码翻译成 CPU 指令来执行；")])])]),t._v(" "),r("li",[t._v("比较常见的 JavaScript 引擎有哪些呢？\n"),r("ul",[r("li",[t._v("SpiderMonkey：第一款 JavaScript 引擎，由 Brenda- Eich 开发（也就是 JavaScript 作者）；")]),t._v(" "),r("li",[t._v("Chakra：微软开发，用于 IE 浏览器；")]),t._v(" "),r("li",[t._v("JavaScriptCore：WebKit 中的 JavaScript 引擎，Apple 公司开发；")]),t._v(" "),r("li",[t._v("V8：Google 开发的强大 JavaScript 引擎，也帮助 Chrome 从众多浏览器中脱颖而出；")])])])]),t._v(" "),r("h3",{attrs:{id:"webkit-内核"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webkit-内核"}},[t._v("#")]),t._v(" WebKit 内核")]),t._v(" "),r("p",[t._v("这里我们先以 WebKit 为例，WebKit 事实上由两部分组成的：")]),t._v(" "),r("ul",[r("li",[t._v("WebCore：负责 HTML 解析、布局、渲染等等相关的工作；")]),t._v(" "),r("li",[t._v("JavaScriptCore：解析、执行 JavaScript 代码；")])]),t._v(" "),r("h3",{attrs:{id:"v8-引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v8-引擎"}},[t._v("#")]),t._v(" V8 引擎")]),t._v(" "),r("p",[t._v("V8 是用 C ++编写的 Google 开源高性能 JavaScript 和 WebAssembly 引擎，它用于 Chrome 和 Node.js 等。")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),r("p",[t._v("v8 是一个名字，并不是版本号")])]),t._v(" "),r("ul",[r("li",[t._v("它实现 ECMAScript 和 WebAssembly，并在 Windows 7 或更高版本，macOS 10.12+和使用 x64，IA-32，\nARM 或 MIPS 处理器的 Linux 系统上运行。")]),t._v(" "),r("li",[t._v("V8 可以独立运行，也可以嵌入到任何 C ++应用程序中。")])]),t._v(" "),r("p",[r("img",{attrs:{src:v(210),alt:"V8引擎"}})]),t._v(" "),r("h3",{attrs:{id:"v8-引擎的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v8-引擎的原理"}},[t._v("#")]),t._v(" V8 引擎的原理")]),t._v(" "),r("ul",[r("li",[t._v("V8 引擎本身的源码非常复杂，大概有超过 100w 行 C++代码，但是我们可以简单了解一下它执行 JavaScript 代码的原理：")]),t._v(" "),r("li",[t._v("Parse 模块会将 JavaScript 代码转换成 AST（抽象语法树），这是因为解释器并不直接认识 JavaScript 代码；\n"),r("ul",[r("li",[t._v("如果函数没有被调用，那么是不会被转换成 AST 的；")]),t._v(" "),r("li",[t._v("Parse 的 V8 官方文档：https://v8.dev/blog/scanner")])])]),t._v(" "),r("li",[t._v("Ignition 是一个解释器，会将 AST 转换成 ByteCode（字节码）\n"),r("ul",[r("li",[t._v("同时会收集 TurboFan 优化所需要的信息（比如函数参数的类型信息，有了类型才能进行真实的运算）；")]),t._v(" "),r("li",[t._v("如果函数只调用一次，Ignition 会执行解释执行 ByteCode；")]),t._v(" "),r("li",[t._v("Ignition 的 V8 官方文档：https://v8.dev/blog/ignition-interpreter")])])]),t._v(" "),r("li",[t._v("TurboFan 是一个编译器，可以将字节码编译为 CPU 可以直接执行的机器码；\n"),r("ul",[r("li",[t._v("如果一个函数被多次调用，那么就会被标记为热点函数，那么就会经过 TurboFan 转换成优化的机器码，提高代码的执行性能；")]),t._v(" "),r("li",[t._v("但是，机器码实际上也会被还原为 ByteCode，这是因为如果后续执行函数的过程中，类型发生了变化（比如 sum 函数原来执行的是 number 类型，后\n来执行变成了 string 类型），之前优化的机器码并不能正确的处理运算，就会逆向的转换成字节码；")]),t._v(" "),r("li",[t._v("TurboFan 的 V8 官方文档：https://v8.dev/blog/turbofan-jit")])])]),t._v(" "),r("li",[t._v("上面是 JavaScript 代码的执行过程，事实上 V8 的内存回收也是其强大的另外一个原因，不过这里暂时先不展开讨论：\n"),r("ul",[r("li",[t._v("Orinoco 模块，负责垃圾回收，将程序中不需要的内存回收；")]),t._v(" "),r("li",[t._v("Orinoco 的 V8 官方文档：https://v8.dev/blog/trash-talk")])])])]),t._v(" "),r("h3",{attrs:{id:"repl"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#repl"}},[t._v("#")]),t._v(" REPL")]),t._v(" "),r("p",[t._v("REPL 是 Read-Eval-Print Loop 的简称，翻译为“读取-求值-输出”循环；")]),t._v(" "),r("ul",[r("li",[t._v("REPL 是一个简单的、交互式的编程环境；")]),t._v(" "),r("li",[t._v("事实上，我们浏览器的 console 就可以看成一个 REPL。")]),t._v(" "),r("li",[t._v("Node 也给我们提供了一个 REPL 环境，我们可以在其中演练简单的代码。")])]),t._v(" "),r("h2",{attrs:{id:"环境搭建"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#环境搭建"}},[t._v("#")]),t._v(" 环境搭建")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://nodejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载 Node.js"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("LTS 版本：相对稳定一些，推荐线上环境使用该版本；\nCurrent 版本：最新的 Node 版本，包含很多新特性；")])])}),[],!1,null,null,null);a.default=e.exports}}]);