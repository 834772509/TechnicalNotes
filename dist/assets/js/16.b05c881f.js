(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{212:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"qt界面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qt界面"}},[t._v("#")]),t._v(" QT界面")]),t._v(" "),a("ul",[a("li",[t._v("PyQt是GPLv3协议，大意是你的程序中用了它，你的程序就要开源，如果闭源商用就会违反协议（后果自负，脸皮够厚无所谓）。除非你搞封装动态加载那一套来强行规避。")]),t._v(" "),a("li",[t._v("PySide是LGPL协议，如果你只是作为库用用它，你的程序还是可以闭源商用。")])]),t._v(" "),a("h2",{attrs:{id:"安装-pyside2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-pyside2"}},[t._v("#")]),t._v(" 安装 PySide2")]),t._v(" "),a("p",[a("code",[t._v("pip install pyside2")])]),t._v(" "),a("h2",{attrs:{id:"界面设计师-qt-designer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#界面设计师-qt-designer"}},[t._v("#")]),t._v(" 界面设计师 Qt Designer")]),t._v(" "),a("p",[t._v("路径:"),a("code",[t._v("\\Pyhton\\Lib\\site-packages\\PySide2\\designer.exe")])]),t._v(" "),a("h2",{attrs:{id:"动态加载ui文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态加载ui文件"}},[t._v("#")]),t._v(" 动态加载UI文件")]),t._v(" "),a("p",[t._v("有了界面定义文件，我们的Python程序就可以从文件中加载UI定义，并且动态 创建一个相应的窗口对象。")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtWidgets "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QApplication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QMessageBox\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtUiTools "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QUiLoader\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从文件中加载UI定义")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从 UI 定义中动态 创建一个相应的窗口对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意：里面的控件对象也成为窗口对象的属性了")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如 self.ui.button , self.ui.textEdit")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ui "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QUiLoader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'main.ui'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ui"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushButton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clicked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("事件方法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" 事件方法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#事件方法")]),t._v("\napp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QApplication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstats "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ui"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"转化ui文件为python代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转化ui文件为python代码"}},[t._v("#")]),t._v(" 转化UI文件为Python代码")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("pyside2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uic main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ui "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ui_main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看代码")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtWidgets "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QApplication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("QMainWindow\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" ui_main "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Ui_MainWindow\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainWindow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QMainWindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用ui文件导入定义界面类")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ui "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Ui_MainWindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化界面")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ui"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setupUi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用界面定义的控件，也是从ui里面访问")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ui"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webview"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.baidu.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QApplication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmainw "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MainWindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmainw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"按钮-qpushbutton"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按钮-qpushbutton"}},[t._v("#")]),t._v(" 按钮 QPushButton")]),t._v(" "),a("p",[a("strong",[t._v("信号：被点击")])]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clicked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("事件函数名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：改变文本")])]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("文本内容"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"标签-qlabel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签-qlabel"}},[t._v("#")]),t._v(" 标签 QLabel")]),t._v(" "),a("p",[a("strong",[t._v("方法：改变文本")]),a("br"),t._v("\n代码中可以使用 setText 方法来改变标签文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"单行文本框-qlineedit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单行文本框-qlineedit"}},[t._v("#")]),t._v(" 单行文本框 QLineEdit")]),t._v(" "),a("p",[a("strong",[t._v("信号：文本被修改")]),a("br"),t._v("\n当文本框中的内容被键盘编辑，被点击就会发出 textChanged 信号，可以这样指定处理该信号的函数")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textChanged"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("事件方法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：获取文本")]),a("br"),t._v("\n通过 text 方法获取编辑框内的文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：设置提示")]),a("br"),t._v("\n通过 setPlaceholderText 方法可以设置提示文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setPlaceholderText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提示内容'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：设置文本")]),a("br"),t._v("\n通过 setText 方法设置编辑框内的文本内容为参数里面的文本字符串")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文本"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("原来的所有内容会被清除")]),t._v(" "),a("p",[a("strong",[t._v("方法：清除所有文本")]),a("br"),t._v("\nclear 方法可以清除编辑框内所有的文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：拷贝文本到剪贴板")]),a("br"),t._v("\ncopy 方法可以清除编辑框内所有的文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("copy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：粘贴剪贴板文本")]),a("br"),t._v("\npaste 方法可以把剪贴板内容，拷贝到编辑框当前光标所在处")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("paste"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"多行纯文本框-qplaintextedit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行纯文本框-qplaintextedit"}},[t._v("#")]),t._v(" 多行纯文本框 QPlainTextEdit")]),t._v(" "),a("p",[a("strong",[t._v("信号：文本被修改")]),a("br"),t._v("\n当文本框中的内容被键盘编辑，被点击就会发出 textChanged 信号，可以这样指定处理该信号的函数")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textChanged"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handleTextChange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("信号：光标位置改变")]),a("br"),t._v("\n当文本框中的光标位置变动，就会发出 cursorPositionChanged 信号，可以这样指定处理该信号的函数")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cursorPositionChanged"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handleChanged"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：获取文本")]),a("br"),t._v("\n通过 toPlainText 方法获取编辑框内的文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPlainText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：设置提示")]),a("br"),t._v("\n通过 setPlaceholderText 方法可以设置提示文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setPlaceholderText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请在这里输入薪资表'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：设置文本")]),a("br"),t._v("\n通过 setPlainText 方法设置编辑框内的文本内容为参数里面的文本字符串")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setPlainText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''文本内容'''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("原来的所有内容会被清除")]),t._v(" "),a("p",[a("strong",[t._v("方法：在末尾添加文本")]),a("br"),t._v("\n通过 appendPlainText 方法在编辑框末尾添加文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("appendPlainText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'文本内容'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：清除所有文本")]),a("br"),t._v("\nclear 方法可以清除编辑框内所有的文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：拷贝文本到剪贴板")]),a("br"),t._v("\ncopy 方法可以清除编辑框内所有的文本内容")]),t._v(" "),a("p",[t._v("edit.copy()\n"),a("strong",[t._v("方法：粘贴剪贴板文本")]),a("br"),t._v("\npaste 方法可以把剪贴板内容，拷贝到编辑框当前光标所在处")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("edit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("paste"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"组合选择框"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合选择框"}},[t._v("#")]),t._v(" 组合选择框")]),t._v(" "),a("p",[a("strong",[t._v("信号：选项改变")]),a("br"),t._v("\n如果用户操作修改了QComboBox中的选项就会发出 currentIndexChanged 信号，可以这样指定处理该信号的函数")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("cbox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentIndexChanged"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handleSelectionChange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：添加一个选项")]),a("br"),t._v("\n代码中可以使用 addItem 方法来添加一个选项到 末尾 ，参数就是选项文本")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("cbox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'选项文本'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：添加多个选项")]),a("br"),t._v("\n代码中可以使用 addItems 方法来添加多个选项到 末尾，参数是包含了多个选项文本的列表")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("cbox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addItems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：清空选项")]),a("br"),t._v("\n代码中可以使用 clear 方法来清空选项，也就是删除选择框内所有的选项")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("cbox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：获取当前选项文本")]),a("br"),t._v("\n代码中可以使用 currentText 方法来获取当前 选中的选项 的文本")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cbox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"列表-qlistwidget"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表-qlistwidget"}},[t._v("#")]),t._v(" 列表 QListWidget")]),t._v(" "),a("p",[a("strong",[t._v("方法：添加一个选项")]),a("br"),t._v("\n代码中可以使用 addItem 方法来添加一个选项到 末尾 ，参数就是选项文本")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("listWidget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'byhy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：添加多个选项")]),a("br"),t._v("\n代码中可以使用 addItems 方法来添加多个选项到 末尾，参数是包含了多个选项文本的列表")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("listWidget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addItems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：删除一个选项")]),a("br"),t._v("\n代码中可以使用 takeItem 方法来删除1个选项，参数是该选项所在行")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("listWidget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("takeItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就会删除第二行选项")]),t._v(" "),a("p",[a("strong",[t._v("方法：清空选项")]),t._v("\n代码中可以使用 clear 方法来清空选项，也就是删除选择框内所有的选项")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("listWidget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：获取当前选项文本")]),a("br"),t._v("\ncurrentItem 方法可以得到列表当前选中项对象（QListWidgetItem） ，再调用这个对象的 text 方法，就可以获取文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("listWidget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n就获取了 第"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("行，第"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("列 的单元格里面的文本。\n")])])]),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("listWidget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"表格-qtablewidget"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表格-qtablewidget"}},[t._v("#")]),t._v(" 表格 QTableWidget")]),t._v(" "),a("p",[a("strong",[t._v("方法：获取所有行数")]),a("br"),t._v("\n代码中可以使用 rowCount 方法来获取表格所有的函数")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rowCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法：获取当前选中是第几行")]),a("br"),t._v("\n代码中可以使用 currentRow 方法来获取当前选中是第几行")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentRow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("行数是从0开始的， 第一行的行数是 0")])]),t._v(" "),a("p",[a("strong",[t._v("方法：插入一行")]),a("br"),t._v("\ninsertRow 方法可以在指定位置插入一行")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insertRow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就插入一行到第 1 行这个位置， 表格原来第1行（包括原来的第1行）以后的内容，全部往下移动一行。")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insertRow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就插入一行到第 3 行这个位置， 表格原来第3行（包括原来的第3行）以后的内容，全部往下移动一行。")]),t._v(" "),a("p",[a("strong",[t._v("方法：删除一行")]),a("br"),t._v("\nremoveRow 方法可以删除指定位置的一行")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("removeRow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就删除第 1 行， 表格原来第1行以后的内容，全部往上移动一行。")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("removeRow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就删除第 3 行， 表格原来第3行以后的内容，全部往上移动一行。")]),t._v(" "),a("p",[a("strong",[t._v("方法：获取某个单元格文本的内容")]),a("br"),t._v("\nitem 方法可以指定位置的单元格对象（QTableWidgetItem） ，再调用这个对象的 text 方法，就可以获取文本内容")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就获取了 第1行，第1列 的单元格里面的文本。")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就获取了 第3行，第5列 的单元格里面的文本。")]),t._v(" "),a("h2",{attrs:{id:"单选按钮-和-按钮组-qradiobutton"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单选按钮-和-按钮组-qradiobutton"}},[t._v("#")]),t._v(" 单选按钮 和 按钮组 QRadioButton")]),t._v(" "),a("p",[a("strong",[t._v("说明")]),a("br"),t._v("\n同一个父窗口 里面的多个单选按钮，只能选中一项。\n如果你有多组单选按钮， 每组都应该有不同的父控件，或者不同的Layout。\n通常建议：多组单选按钮，放到不同的 按钮组 QButtonGroup 中，按钮组就是父控件")]),t._v(" "),a("p",[a("strong",[t._v("方法：获取是否选中")])]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("radioButton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isChecked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("信号：选中状态改变")]),a("br"),t._v("\n如果用户操作点击了按钮组 QButtonGroup 中的一个按钮， QButtonGroup 就会发出 buttonClicked 信号，可以这样指定处理该信号的函数")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("buttongroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buttonClicked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handleButtonClicked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后，在处理函数中调用QButtonGroup对象的 checkedButton() 函数，返回值就是被选中的按钮对象。"),a("br"),t._v("\n再调用这个返回的按钮对象的 text() 方法得到界面文本，就可以知道是哪个选项被选中了。")]),t._v(" "),a("h2",{attrs:{id:"多选框-qcheckbox"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多选框-qcheckbox"}},[t._v("#")]),t._v(" 多选框 QCheckBox")]),t._v(" "),a("p",[a("strong",[t._v("说明")]),a("br"),t._v("\n通常建议：多组勾选按钮，放到不同的 按钮组 QButtonGroup 中，按钮组就是父控件。")]),t._v(" "),a("p",[a("strong",[t._v("信号：选中状态改变")]),a("br"),t._v("\n如果用户操作点击了按钮组 QButtonGroup 中的一个按钮， QButtonGroup 就会发出 buttonClicked 信号，可以这样指定处理该信号的函数")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("buttongroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buttonClicked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handleButtonClicked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后，在处理函数中调用QButtonGroup对象的 checkedButton() 函数，返回值就是被选中的按钮对象。"),a("br"),t._v("\n再调用这个返回的按钮对象的 text() 方法得到界面文本，就可以知道是哪个选项被选中了。")]),t._v(" "),a("h2",{attrs:{id:"进度条-qprogressbar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进度条-qprogressbar"}},[t._v("#")]),t._v(" 进度条 QProgressBar")]),t._v(" "),a("p",[a("strong",[t._v("说明")]),a("br"),t._v("\n进度条也是一个常用的控件，当程序需要做一件比较耗费时间的任务（比如统计数据，下载文件等）时，可以用来向用户指示操作的进度。\n而且有了进度显示，用户就知道应用程序仍在运行，并没有出问题。\nQProgressBar进度条把每个进度称之为一个step（步骤）。\n我们可以通过它的 setRange 方法设定步骤个数")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("progressBar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setRange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就设定了，进度分为5步。\n然后，通过 setValue 方法，指定当前完成到了哪一步\nprogressBar.setValue(3)\n就表示完成了 3/5， 也就是 60%， 进度条就会显示60%的进度。\n可以使用reset()将进度条倒退到开头。\n有时候我们的任务没法知道完成了多少下载一个未知大小的文件。\n这时，可以把range 范围都设置为0，这样，进度条会显示忙碌指示符，而不是显示进度百分比。")]),t._v(" "),a("p",[t._v("下面是一个进度条程序的示例代码")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看代码")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtWidgets "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QApplication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QMainWindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QPushButton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  QProgressBar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("QMessageBox\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" time "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sleep\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" threading "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v("  Thread\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义信号对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Signal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("QObject\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SignalSrc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    progress_update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SignalSrc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接信号到处理的slot函数")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("progress_update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QMainWindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("move"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("progressBar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QProgressBar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("progressBar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("progressBar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("move"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进度是 0 - 5，")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("progressBar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setRange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("button "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QPushButton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'统计'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("move"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clicked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleCalc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 统计进行中标记，不能同时做两个统计")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ongoing "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCalc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("workerThreadFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ongoing "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发出信息，通知主线程进行进度处理")]),t._v("\n                self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("progress_update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ongoing "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ongoing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            QMessageBox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("warning"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'警告'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'任务进行中，请等待完成'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\n        worker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("workerThreadFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 处理进度的slot函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProgress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("progressBar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\napp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QApplication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstats "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);