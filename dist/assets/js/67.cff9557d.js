(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{261:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-hooks"}},[t._v("#")]),t._v(" React Hooks")]),t._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("h3",{attrs:{id:"为什么需要-hook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-hook"}},[t._v("#")]),t._v(" 为什么需要 Hook")]),t._v(" "),a("p",[t._v("Hook 是 React 16.8 的新增特性，它可以让我们在不编写 class 的情况下使用 state 以及其他的 React 特性（比如生命周期）")]),t._v(" "),a("p",[t._v("我们先来思考一下 class 组件相对于函数式组件有什么优势？比较常见的是下面的优势：")]),t._v(" "),a("ul",[a("li",[t._v("class 组件可以定义自己的 state，用来保存组件自己内部的状态；\n"),a("ul",[a("li",[t._v("函数式组件不可以，因为函数每次调用都会产生新的临时变量；")])])]),t._v(" "),a("li",[t._v("class 组件有自己的生命周期，我们可以在对应的生命周期中完成自己的逻辑；\n"),a("ul",[a("li",[t._v("比如在 componentDidMount 中发送网络请求，并且该生命周期函数只会执行一次；")]),t._v(" "),a("li",[t._v("函数式组件在学习 hooks 之前，如果在函数中发送网络请求，意味着每次重新渲染都会重新发送一次网络请求；")])])]),t._v(" "),a("li",[t._v("class 组件可以在状态改变时只会重新执行 render 函数以及我们希望重新调用的生命周期函数 componentDidUpdate 等；\n"),a("ul",[a("li",[t._v("函数式组件在重新渲染时，整个函数都会被执行，似乎没有什么地方可以只让它们调用一次；")])])])]),t._v(" "),a("p",[t._v("所以，在 Hook 出现之前，对于上面这些情况我们通常都会编写 class 组件。")]),t._v(" "),a("h3",{attrs:{id:"class-组件存在的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-组件存在的问题"}},[t._v("#")]),t._v(" Class 组件存在的问题")]),t._v(" "),a("ul",[a("li",[t._v("复杂组件变得难以理解：\n"),a("ul",[a("li",[t._v("我们在最初编写一个 class 组件时，往往逻辑比较简单，并不会非常复杂。但是随着业务的增多，我们的 class 组件会变得越来越复杂；")]),t._v(" "),a("li",[t._v("比如 componentDidMount 中，可能就会包含大量的逻辑代码：包括网络请求、一些事件的监听（还需要在\ncomponentWillUnmount 中移除）；")]),t._v(" "),a("li",[t._v("而对于这样的 class 实际上非常难以拆分：因为它们的逻辑往往混在一起，强行拆分反而会造成过度设计，增加代码的复杂度；")])])]),t._v(" "),a("li",[t._v("难以理解的 class：\n"),a("ul",[a("li",[t._v("很多人发现学习 ES6 的 class 是学习 React 的一个障碍。")]),t._v(" "),a("li",[t._v("比如在 class 中，我们必须搞清楚 this 的指向到底是谁，所以需要花很多的精力去学习 this；")]),t._v(" "),a("li",[t._v("虽然我认为前端开发人员必须掌握 this，但是依然处理起来非常麻烦；")])])]),t._v(" "),a("li",[t._v("组件复用状态很难：\n"),a("ul",[a("li",[t._v("在前面为了一些状态的复用我们需要通过高阶组件或 render props；")]),t._v(" "),a("li",[t._v("像我们之前学习的 redux 中 connect 或者 react-router 中的 withRouter，这些高阶组件设计的目的就是为了状态的复用；")]),t._v(" "),a("li",[t._v("或者类似于 Provider、Consumer 来共享一些状态，但是多次使用 Consumer 时，我们的代码就会存在很多嵌套；")]),t._v(" "),a("li",[t._v("这些代码让我们不管是编写和设计上来说，都变得非常困难；")])])])]),t._v(" "),a("h3",{attrs:{id:"hook-的出现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hook-的出现"}},[t._v("#")]),t._v(" Hook 的出现")]),t._v(" "),a("ul",[a("li",[t._v("Hook 的出现，可以解决上面提到的这些问题；")]),t._v(" "),a("li",[t._v("简单总结一下 hooks：\n"),a("ul",[a("li",[t._v("它可以让我们在不编写 class 的情况下使用 state 以及其他的 React 特性；")]),t._v(" "),a("li",[t._v("但是我们可以由此延伸出非常多的用法，来让我们前面所提到的问题得到解决；")])])]),t._v(" "),a("li",[t._v("Hook 的使用场景：\n"),a("ul",[a("li",[t._v("Hook 的出现基本可以代替我们之前所有使用 class 组件的地方（除了一些非常不常用的场景）；")]),t._v(" "),a("li",[t._v("但是如果是一个旧的项目，你并不需要直接将所有的代码重构为 Hooks，因为它完全向下兼容，你可以渐进式的来使用它；")]),t._v(" "),a("li",[t._v("Hook 只能在函数组件中使用，不能在类组件，或者函数组件之外的地方使用；")])])])]),t._v(" "),a("h3",{attrs:{id:"usestate-解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usestate-解析"}},[t._v("#")]),t._v(" useState 解析")]),t._v(" "),a("ul",[a("li",[t._v("useState 来自 react，需要从 react 中导入，它是一个 hook；\n参数：初始化值，如果不设置为 undefined；")]),t._v(" "),a("li",[t._v("返回值：数组，包含两个元素；\n"),a("ul",[a("li",[t._v("元素一：当前状态的值（第一调用为初始化值）；")]),t._v(" "),a("li",[t._v("元素二：设置状态值的函数；")])])]),t._v(" "),a("li",[t._v("Hook 就是 JavaScript 函数，这个函数可以帮助你 钩入（hook into） React State 以及生命周期等特性；")]),t._v(" "),a("li",[t._v("但是使用它们会有两个额外的规则：\n"),a("ul",[a("li",[t._v("只能在函数最外层调用 Hook。不要在循环、条件判断或者子函数中调用。")]),t._v(" "),a("li",[t._v("只能在 React 的函数组件中调用 Hook。不要在其他 JavaScript 函数中调用。")])])])]),t._v(" "),a("h3",{attrs:{id:"为什么叫-usestate-而不叫-createstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么叫-usestate-而不叫-createstate"}},[t._v("#")]),t._v(" 为什么叫 useState 而不叫 createState")]),t._v(" "),a("p",[t._v("“Create” 可能不是很准确，因为 state 只在组件首次渲染的时候被创建。在下一次重新渲染时，useState 返回给我们当前的 state。如果每次都创建新的变量，它就不是 “state”了。这也是 Hook 的名字 总是 以 use 开头的一个原因。")]),t._v(" "),a("h2",{attrs:{id:"基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[t._v("#")]),t._v(" 基本使用")]),t._v(" "),a("p",[t._v("Visual Studio Code 快速使用 useState："),a("code",[t._v("useState")]),t._v("->选择代码段->回车")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MulutState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v("变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("初始值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v("变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"值"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"值"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"修改数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改数据"}},[t._v("#")]),t._v(" 修改数据")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改普通数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("变量名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 改变数组内Object的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Object "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("键 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("变量名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);